// <auto-generated />
using System;
using BochaStoreAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BochaStoreAPI.Migrations
{
    [DbContext(typeof(ProductoDbContext))]
    partial class ProductoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BochaStoreAPI.Models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductoIdProducto")
                        .HasColumnType("int");

                    b.HasKey("IdCategoria");

                    b.HasIndex("ProductoIdProducto");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            IdCategoria = 1,
                            Nombre = "Camisetas"
                        });
                });

            modelBuilder.Entity("BochaStoreAPI.Models.ImagenProducto", b =>
                {
                    b.Property<int>("IdImagen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdImagen"));

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdImagen");

                    b.HasIndex("ProductoId");

                    b.ToTable("ImagenesProducto");
                });

            modelBuilder.Entity("BochaStoreAPI.Models.Marca", b =>
                {
                    b.Property<int>("IdMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMarca"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductoIdProducto")
                        .HasColumnType("int");

                    b.HasKey("IdMarca");

                    b.HasIndex("ProductoIdProducto");

                    b.ToTable("Marcas");

                    b.HasData(
                        new
                        {
                            IdMarca = 1,
                            Nombre = "Adidas"
                        });
                });

            modelBuilder.Entity("BochaStoreAPI.Models.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.Property<int>("PropietarioId")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("IdProducto");

                    b.HasIndex("PropietarioId");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            IdProducto = 1,
                            Descripcion = "Bebida Gaseosa",
                            Nombre = "Coca Cola",
                            Precio = 0.0,
                            PropietarioId = 1,
                            Stock = 50
                        });
                });

            modelBuilder.Entity("BochaStoreAPI.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            IdUsuario = 1,
                            Email = "admin@bocha.com",
                            Nombre = "Admin Bocha",
                            Password = "admin123",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("BochaStoreAPI.Models.Categoria", b =>
                {
                    b.HasOne("BochaStoreAPI.Models.Producto", "Producto")
                        .WithMany("Categorias")
                        .HasForeignKey("ProductoIdProducto");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("BochaStoreAPI.Models.ImagenProducto", b =>
                {
                    b.HasOne("BochaStoreAPI.Models.Producto", "Producto")
                        .WithMany("Imagenes")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("BochaStoreAPI.Models.Marca", b =>
                {
                    b.HasOne("BochaStoreAPI.Models.Producto", "Producto")
                        .WithMany("Marcas")
                        .HasForeignKey("ProductoIdProducto");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("BochaStoreAPI.Models.Producto", b =>
                {
                    b.HasOne("BochaStoreAPI.Models.Usuario", "Propietario")
                        .WithMany("Productos")
                        .HasForeignKey("PropietarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Propietario");
                });

            modelBuilder.Entity("BochaStoreAPI.Models.Producto", b =>
                {
                    b.Navigation("Categorias");

                    b.Navigation("Imagenes");

                    b.Navigation("Marcas");
                });

            modelBuilder.Entity("BochaStoreAPI.Models.Usuario", b =>
                {
                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
